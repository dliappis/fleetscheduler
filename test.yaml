__fleetdef:
  schema: 1

servicegroups:
  prod-webapp1:
    copies: 1
    env: prod
    containers:
      redis:
        description: Redis instance
        image: redis
        # Use wants to ensure container gets killed when the other one does
        wants:
          - prod-helloweather.service
        # Use before or after to declare order to start up. More than one entries can be defined
        before:
          - prod-helloweather.service
        #ports:
          # public:local
        #  - 9999:6379
        limits:
          memory: 0.2g
          cpu: 0.5
        # conflicts:
        #   - redis*.service
      helloweather:
        description: Test weather app dependeing on redis
        image: luebken/currentweather
        # OPTION: define domain name
        domain: prodhelloweather
        # OPTIONAL: define list of port associations
        ports:
          - 80:1337
        # OPTIONAL: define list of link associations
        # Use the container name for links, skip the .service bit
        links:
          - prod-redis:redis
        # OPTIONAL: define wants/after keywords
        # Note: list order is preserved
        wants:
          - prod-redis.service
        after:
          - prod-redis*.service
        # OPTIONAL: define limits for container
        limits:
          memory: 0.2g
          cpu: 0.5
        # OPTIONAL:
        # Define here lists for MachineID, MachineOf, MachineMedata, Conflicts, Global
        # define all those as lowercase
        conflicts:
          - staging-helloworld*.service
          - staging-redis*.service
        machineof:
          - prod-redis.service
  staging-webapp1:
    copies: 1
    env: staging
    containers:
      redis:
        description: Redis instance
        image: redis
        # Use wants to ensure container gets killed when the other one does
        wants:
          - helloworld.service
        # Use before or after to declare order to start up. More than one entries can be defined
        #ports:
          # public:local
        #  - 9999:6379
        limits:
          memory: 0.2g
          cpu: 0.5
        # conflicts:
        #   - redis*.service
      helloworld:
        description: Hello World web app
        image: tutum/hello-world
        domain: stagingtestapp
        ports:
          - 80:80
        # Note: list order is preserved
        wants:
          - redis.service
        after:
          - redis.service
        limits:
          memory: 0.2g
          cpu: 0.5
        # Define here lists for MachineID, MachineOf, MachineMedata, Conflicts, Global
        conflicts:
          - prod*.service
